[
  {
    "depth": 5,
    "value": "A Gigabyte-Scale Memory Leak",
    "id": "a-gigabyte-scale-memory-leak"
  },
  {
    "depth": 3,
    "value": "Understanding Buffer Memory Architecture",
    "id": "understanding-buffer-memory-architecture"
  },
  {
    "depth": 3,
    "value": "The 8KB Speed Hack: Buffer Pooling",
    "id": "the-8kb-speed-hack-buffer-pooling"
  },
  {
    "depth": 5,
    "value": "Views and References: slice, subarray, and Buffer.from",
    "id": "views-and-references-slice-subarray-and-bufferfrom"
  },
  {
    "depth": 5,
    "value": "Zero-Copy Operations",
    "id": "zero-copy-operations"
  },
  {
    "depth": 3,
    "value": "Buffers, TypedArrays, and the Memory They Share",
    "id": "buffers-typedarrays-and-the-memory-they-share"
  },
  {
    "depth": 5,
    "value": "When Views Share Memory (and When They Don't)",
    "id": "when-views-share-memory-and-when-they-dont"
  },
  {
    "depth": 5,
    "value": "Copy Semantics and Buffer.copy()",
    "id": "copy-semantics-and-buffercopy"
  },
  {
    "depth": 5,
    "value": "SharedArrayBuffer and Cross-Thread Views",
    "id": "sharedarraybuffer-and-cross-thread-views"
  },
  {
    "depth": 5,
    "value": "Memory Retention and Garbage Collection",
    "id": "memory-retention-and-garbage-collection"
  },
  {
    "depth": 5,
    "value": "Binary Protocol Parsing with Views",
    "id": "binary-protocol-parsing-with-views"
  },
  {
    "depth": 5,
    "value": "Platform Endianness and TypedArray Views",
    "id": "platform-endianness-and-typedarray-views"
  },
  {
    "depth": 5,
    "value": "Production Patterns for Zero-Copy",
    "id": "production-patterns-for-zero-copy"
  },
  {
    "depth": 5,
    "value": "Debugging Memory Issues with Views",
    "id": "debugging-memory-issues-with-views"
  },
  {
    "depth": 5,
    "value": "Best Practices for Buffer Manipulation",
    "id": "best-practices-for-buffer-manipulation"
  },
  {
    "depth": 5,
    "value": "Memory Profiling Data",
    "id": "memory-profiling-data"
  },
  {
    "depth": 5,
    "value": "Closing",
    "id": "closing"
  }
]